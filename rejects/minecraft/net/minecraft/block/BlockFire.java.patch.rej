++++ REJECTED PATCH 1
         int j = pos.getY();
         int k = pos.getZ();
 
-        if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) && !Blocks.fire.canCatchFire(worldIn, pos.down()))
+        if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) && !Blocks.fire.canCatchFire(worldIn, pos.down(), EnumFacing.UP))
         {
             boolean flag = (i + j + k & 1) == 1;
             boolean flag1 = (i / 2 + j / 2 + k / 2 & 1) == 1;
             int l = 0;
 
-            if (this.canCatchFire(worldIn, pos.up()))
+            if (this.canCatchFire(worldIn, pos.up(), EnumFacing.DOWN))
             {
                 l = flag ? 1 : 2;
             }
 
-            return state.withProperty(NORTH, Boolean.valueOf(this.canCatchFire(worldIn, pos.north()))).withProperty(EAST, Boolean.valueOf(this.canCatchFire(worldIn, pos.east()))).withProperty(SOUTH, Boolean.valueOf(this.canCatchFire(worldIn, pos.south()))).withProperty(WEST, Boolean.valueOf(this.canCatchFire(worldIn, pos.west()))).withProperty(UPPER, Integer.valueOf(l)).withProperty(FLIP, Boolean.valueOf(flag1)).withProperty(ALT, Boolean.valueOf(flag));
+            return state.withProperty(NORTH, Boolean.valueOf(this.canCatchFire(worldIn, pos.north(), EnumFacing.SOUTH)))
+                        .withProperty(EAST, Boolean.valueOf(this.canCatchFire(worldIn, pos.east(),  EnumFacing.EAST )))
+                        .withProperty(SOUTH, Boolean.valueOf(this.canCatchFire(worldIn, pos.south(), EnumFacing.NORTH)))
+                        .withProperty(WEST, Boolean.valueOf(this.canCatchFire(worldIn, pos.west(),  EnumFacing.EAST )))
+                        .withProperty(UPPER, Integer.valueOf(l))
+                        .withProperty(FLIP, Boolean.valueOf(flag1))
+                        .withProperty(ALT, Boolean.valueOf(flag));
         }
         else
         {
++++ END PATCH
++++ REJECTED PATCH 3
             }
 
             Block block = worldIn.getBlockState(pos.down()).getBlock();
-            boolean flag = block == Blocks.netherrack;
+            boolean flag = block.isFireSource(worldIn, pos.down(), EnumFacing.UP);
 
-            if (worldIn.provider instanceof WorldProviderEnd && block == Blocks.bedrock)
-            {
-                flag = true;
-            }
-
             if (!flag && worldIn.isRaining() && this.canDie(worldIn, pos))
             {
                 worldIn.setBlockToAir(pos);
++++ END PATCH
++++ REJECTED PATCH 10
             worldIn.playSound((double)((float)pos.getX() + 0.5F), (double)((float)pos.getY() + 0.5F), (double)((float)pos.getZ() + 0.5F), "fire.fire", 1.0F + rand.nextFloat(), rand.nextFloat() * 0.7F + 0.3F, false);
         }
 
-        if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) && !Blocks.fire.canCatchFire(worldIn, pos.down()))
+        if (!World.doesBlockHaveSolidTopSurface(worldIn, pos.down()) && !Blocks.fire.canCatchFire(worldIn, pos.down(), EnumFacing.UP))
         {
-            if (Blocks.fire.canCatchFire(worldIn, pos.west()))
+            if (Blocks.fire.canCatchFire(worldIn, pos.west(), EnumFacing.EAST))
             {
                 for (int j = 0; j < 2; ++j)
                 {
++++ END PATCH
++++ REJECTED PATCH 11
                 }
             }
 
-            if (Blocks.fire.canCatchFire(worldIn, pos.east()))
+            if (Blocks.fire.canCatchFire(worldIn, pos.east(), EnumFacing.WEST))
             {
                 for (int k = 0; k < 2; ++k)
                 {
++++ END PATCH
++++ REJECTED PATCH 12
                 }
             }
 
-            if (Blocks.fire.canCatchFire(worldIn, pos.north()))
+            if (Blocks.fire.canCatchFire(worldIn, pos.north(), EnumFacing.SOUTH))
             {
                 for (int l = 0; l < 2; ++l)
                 {
++++ END PATCH
++++ REJECTED PATCH 13
                 }
             }
 
-            if (Blocks.fire.canCatchFire(worldIn, pos.south()))
+            if (Blocks.fire.canCatchFire(worldIn, pos.south(), EnumFacing.NORTH))
             {
                 for (int i1 = 0; i1 < 2; ++i1)
                 {
++++ END PATCH
++++ REJECTED PATCH 14
                 }
             }
 
-            if (Blocks.fire.canCatchFire(worldIn, pos.up()))
+            if (Blocks.fire.canCatchFire(worldIn, pos.up(), EnumFacing.DOWN))
             {
                 for (int j1 = 0; j1 < 2; ++j1)
                 {
++++ END PATCH
