++++ REJECTED PATCH 1
 
 public class BlockTrapDoor extends Block
 {
+    /** Set this to allow trapdoors to remain free-floating */
+    public static boolean disableValidation = false;
     public static final PropertyDirection FACING = PropertyDirection.create("facing", EnumFacing.Plane.HORIZONTAL);
     public static final PropertyBool OPEN = PropertyBool.create("open");
     public static final PropertyEnum<BlockTrapDoor.DoorHalf> HALF = PropertyEnum.<BlockTrapDoor.DoorHalf>create("half", BlockTrapDoor.DoorHalf.class);
++++ END PATCH
++++ REJECTED PATCH 2
     {
         if (!worldIn.isRemote)
         {
+            EnumFacing direction = (EnumFacing)state.getValue(FACING);
             BlockPos blockpos = pos.offset(((EnumFacing)state.getValue(FACING)).getOpposite());
 
-            if (!isValidSupportBlock(worldIn.getBlockState(blockpos).getBlock()))
+            if (!(isValidSupportBlock(worldIn.getBlockState(blockpos).getBlock()) || worldIn.isSideSolid(blockpos, direction, true)))
             {
                 worldIn.setBlockToAir(pos);
                 this.dropBlockAsItem(worldIn, pos, state, 0);
++++ END PATCH
++++ REJECTED PATCH 3
 
     public boolean canPlaceBlockOnSide(World worldIn, BlockPos pos, EnumFacing side)
     {
-        return !side.getAxis().isVertical() && isValidSupportBlock(worldIn.getBlockState(pos.offset(side.getOpposite())).getBlock());
+        if (disableValidation) return true;
+        EnumFacing dir = side.getOpposite();
+        pos = pos.offset(dir);
+        return !side.getAxis().isVertical() && (isValidSupportBlock(worldIn.getBlockState(pos).getBlock()) || worldIn.isSideSolid(pos, side, true));
     }
 
     protected static EnumFacing getFacing(int meta)
++++ END PATCH
++++ REJECTED PATCH 4
 
     private static boolean isValidSupportBlock(Block blockIn)
     {
+        if (disableValidation) return true;
         return blockIn.blockMaterial.isOpaque() && blockIn.isFullCube() || blockIn == Blocks.glowstone || blockIn instanceof BlockSlab || blockIn instanceof BlockStairs;
     }
 
++++ END PATCH
