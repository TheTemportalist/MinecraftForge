++++ REJECTED PATCH 1
         for (int i = 0; i < max; ++i)
         {
             WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent)WeightedRandom.getRandomItem(random, listIn);
-            int j = weightedrandomchestcontent.minStackSize + random.nextInt(weightedrandomchestcontent.maxStackSize - weightedrandomchestcontent.minStackSize + 1);
+            ItemStack[] stacks = weightedrandomchestcontent.generateChestContent(random, inv);
 
-            if (weightedrandomchestcontent.theItemId.getMaxStackSize() >= j)
+            for (ItemStack itemstack1 : stacks)
             {
-                ItemStack itemstack1 = weightedrandomchestcontent.theItemId.copy();
-                itemstack1.stackSize = j;
                 inv.setInventorySlotContents(random.nextInt(inv.getSizeInventory()), itemstack1);
             }
-            else
-            {
-                for (int k = 0; k < j; ++k)
-                {
-                    ItemStack itemstack = weightedrandomchestcontent.theItemId.copy();
-                    itemstack.stackSize = 1;
-                    inv.setInventorySlotContents(random.nextInt(inv.getSizeInventory()), itemstack);
-                }
-            }
         }
     }
 
+    // -- Forge hooks
+    /**
+     * Allow a mod to submit a custom implementation that can delegate item stack generation beyond simple stack lookup
+     *
+     * @param random The current random for generation
+     * @param newInventory The inventory being generated (do not populate it, but you can refer to it)
+     * @return An array of {@link ItemStack} to put into the chest
+     */
+    protected ItemStack[] generateChestContent(Random random, IInventory newInventory)
+    {
+        return net.minecraftforge.common.ChestGenHooks.generateStacks(random, theItemId, minStackSize, maxStackSize);
+    }
+
     public static void generateDispenserContents(Random random, List<WeightedRandomChestContent> listIn, TileEntityDispenser dispenser, int max)
     {
         for (int i = 0; i < max; ++i)
         {
             WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent)WeightedRandom.getRandomItem(random, listIn);
-            int j = weightedrandomchestcontent.minStackSize + random.nextInt(weightedrandomchestcontent.maxStackSize - weightedrandomchestcontent.minStackSize + 1);
+            ItemStack[] stacks = weightedrandomchestcontent.generateChestContent(random, dispenser);
 
-            if (weightedrandomchestcontent.theItemId.getMaxStackSize() >= j)
+            for (ItemStack itemstack1 : stacks)
             {
-                ItemStack itemstack1 = weightedrandomchestcontent.theItemId.copy();
-                itemstack1.stackSize = j;
                 dispenser.setInventorySlotContents(random.nextInt(dispenser.getSizeInventory()), itemstack1);
             }
-            else
-            {
-                for (int k = 0; k < j; ++k)
-                {
-                    ItemStack itemstack = weightedrandomchestcontent.theItemId.copy();
-                    itemstack.stackSize = 1;
-                    dispenser.setInventorySlotContents(random.nextInt(dispenser.getSizeInventory()), itemstack);
-                }
-            }
         }
     }
 
++++ END PATCH
