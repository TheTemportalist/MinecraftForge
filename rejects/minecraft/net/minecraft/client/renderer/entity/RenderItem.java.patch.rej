++++ REJECTED PATCH 1
     public RenderItem(TextureManager textureManager, ModelManager modelManager)
     {
         this.textureManager = textureManager;
-        this.itemModelMesher = new ItemModelMesher(modelManager);
+        this.itemModelMesher = new net.minecraftforge.client.ItemModelMesherForge(modelManager);
         this.registerItems();
     }
 
++++ END PATCH
++++ REJECTED PATCH 2
                 k = k | -16777216;
             }
 
-            this.renderQuad(renderer, bakedquad, k);
+            net.minecraftforge.client.model.pipeline.LightUtil.renderQuadColor(renderer, bakedquad, k);
         }
     }
 
++++ END PATCH
++++ REJECTED PATCH 3
                         modelresourcelocation = new ModelResourceLocation("bow_pulling_0", "inventory");
                     }
                 }
+                else
+                {
+                    // TODO: maybe switch to the smart player model / normal smart item model?
+                    modelresourcelocation = item.getModel(stack, entityplayer, entityplayer.getItemInUseCount());
+                }
 
                 if (modelresourcelocation != null)
                 {
++++ END PATCH
++++ REJECTED PATCH 4
         GlStateManager.enableBlend();
         GlStateManager.tryBlendFuncSeparate(770, 771, 1, 0);
         GlStateManager.pushMatrix();
-        ItemCameraTransforms itemcameratransforms = model.getItemCameraTransforms();
-        itemcameratransforms.applyTransform(cameraTransformType);
+        // TODO: check if negative scale is a thing
+        model = net.minecraftforge.client.ForgeHooksClient.handleCameraTransforms(model, cameraTransformType);
 
-        if (this.func_183005_a(itemcameratransforms.getTransform(cameraTransformType)))
-        {
-            GlStateManager.cullFace(1028);
-        }
-
         this.renderItem(stack, model);
         GlStateManager.cullFace(1029);
         GlStateManager.popMatrix();
++++ END PATCH
++++ REJECTED PATCH 5
         GlStateManager.blendFunc(770, 771);
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
         this.setupGuiTransform(x, y, ibakedmodel.isGui3d());
-        ibakedmodel.getItemCameraTransforms().applyTransform(ItemCameraTransforms.TransformType.GUI);
+        ibakedmodel = net.minecraftforge.client.ForgeHooksClient.handleCameraTransforms(ibakedmodel, ItemCameraTransforms.TransformType.GUI);
         this.renderItem(stack, ibakedmodel);
         GlStateManager.disableAlpha();
         GlStateManager.disableRescaleNormal();
++++ END PATCH
++++ REJECTED PATCH 6
                 GlStateManager.enableDepth();
             }
 
-            if (stack.isItemDamaged())
+            if (stack.getItem().showDurabilityBar(stack))
             {
-                int j = (int)Math.round(13.0D - (double)stack.getItemDamage() * 13.0D / (double)stack.getMaxDamage());
-                int i = (int)Math.round(255.0D - (double)stack.getItemDamage() * 255.0D / (double)stack.getMaxDamage());
+                double health = stack.getItem().getDurabilityForDisplay(stack);
+                int j = (int)Math.round(13.0D - health * 13.0D);
+                int i = (int)Math.round(255.0D - health * 255.0D);
                 GlStateManager.disableLighting();
                 GlStateManager.disableDepth();
                 GlStateManager.disableTexture2D();
++++ END PATCH
++++ REJECTED PATCH 7
                 this.func_181565_a(worldrenderer, xPosition + 2, yPosition + 13, 13, 2, 0, 0, 0, 255);
                 this.func_181565_a(worldrenderer, xPosition + 2, yPosition + 13, 12, 1, (255 - i) / 4, 64, 0, 255);
                 this.func_181565_a(worldrenderer, xPosition + 2, yPosition + 13, j, 1, 255 - i, i, 0, 255);
-                GlStateManager.enableBlend();
+                //GlStateManager.enableBlend(); // Forge: Disable Blend because it screws with a lot of things down the line.
                 GlStateManager.enableAlpha();
                 GlStateManager.enableTexture2D();
                 GlStateManager.enableLighting();
++++ END PATCH
++++ REJECTED PATCH 8
         this.registerBlock(Blocks.brown_mushroom_block, BlockHugeMushroom.EnumType.ALL_INSIDE.getMetadata(), "brown_mushroom_block");
         this.registerBlock(Blocks.red_mushroom_block, BlockHugeMushroom.EnumType.ALL_INSIDE.getMetadata(), "red_mushroom_block");
         this.registerBlock(Blocks.dragon_egg, "dragon_egg");
+        net.minecraftforge.client.model.ModelLoader.onRegisterItems(this.itemModelMesher);
     }
 
     public void onResourceManagerReload(IResourceManager resourceManager)
++++ END PATCH
