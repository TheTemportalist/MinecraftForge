--- ../src-base/minecraft/net/minecraft/network/NetHandlerPlayServer.java
+++ ../src-work/minecraft/net/minecraft/network/NetHandlerPlayServer.java
@@ -159,6 +159,7 @@
 
     public void update()
     {
+        if (this.playerEntity.playerNetServerHandler != this) return; // FORGE: sometimes the netqueue will tick while login is occuring, causing an NPE. We shouldn't tick until the connection is complete
         this.func_184342_d();
         this.playerEntity.onUpdateEntity();
         this.playerEntity.setPositionAndRotation(this.field_184349_l, this.field_184350_m, this.field_184351_n, this.playerEntity.rotationYaw, this.playerEntity.rotationPitch);
@@ -612,7 +613,10 @@
                 double d2 = this.playerEntity.posZ - ((double)blockpos.getZ() + 0.5D);
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                if (d3 > 36.0D)
+                double dist = playerEntity.theItemInWorldManager.getBlockReachDistance() + 1;
+                dist *= dist;
+
+                if (d3 > dist)
                 {
                     return;
                 }
@@ -670,7 +674,9 @@
 
         if (blockpos.getY() < this.serverController.getBuildLimit() - 1 || enumfacing != EnumFacing.UP && blockpos.getY() < this.serverController.getBuildLimit())
         {
-            if (this.field_184362_y == null && this.playerEntity.getDistanceSq((double)blockpos.getX() + 0.5D, (double)blockpos.getY() + 0.5D, (double)blockpos.getZ() + 0.5D) < 64.0D && !this.serverController.isBlockProtected(worldserver, blockpos, this.playerEntity) && worldserver.getWorldBorder().contains(blockpos))
+            double dist = playerEntity.theItemInWorldManager.getBlockReachDistance() + 3;
+            dist *= dist;
+            if (this.field_184362_y == null && this.playerEntity.getDistanceSq((double)blockpos.getX() + 0.5D, (double)blockpos.getY() + 0.5D, (double)blockpos.getZ() + 0.5D) < dist && !this.serverController.isBlockProtected(worldserver, blockpos, this.playerEntity) && worldserver.getWorldBorder().contains(blockpos))
             {
                 this.playerEntity.theItemInWorldManager.func_187251_a(this.playerEntity, worldserver, itemstack, enumhand, blockpos, enumfacing, p_184337_1_.func_187026_d(), p_184337_1_.func_187025_e(), p_184337_1_.func_187020_f());
             }
@@ -689,6 +695,7 @@
         if (itemstack != null && itemstack.stackSize == 0)
         {
             this.playerEntity.func_184611_a(enumhand, (ItemStack)null);
+            net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem(this.playerEntity, itemstack, enumhand);
             itemstack = null;
         }
     }
@@ -703,12 +710,14 @@
 
         if (itemstack != null)
         {
+            //TODO: Hook interact event here... we don't know the type of itneration tho...
             this.playerEntity.theItemInWorldManager.func_187250_a(this.playerEntity, worldserver, itemstack, enumhand);
             itemstack = this.playerEntity.func_184586_b(enumhand);
 
             if (itemstack != null && itemstack.stackSize == 0)
             {
                 this.playerEntity.func_184611_a(enumhand, (ItemStack)null);
+                net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem(this.playerEntity, itemstack, enumhand);
                 itemstack = null;
             }
         }
@@ -888,7 +897,9 @@
             }
             else
             {
-                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", new Object[] {this.playerEntity.getDisplayName(), s});
+                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", this.playerEntity.getDisplayName(), net.minecraftforge.common.ForgeHooks.newChatWithLinks(s));
+                itextcomponent = net.minecraftforge.common.ForgeHooks.onServerChatEvent(this, s, itextcomponent);
+                if (itextcomponent == null) return;
                 this.serverController.func_184103_al().sendChatMsgImpl(itextcomponent, false);
             }
 
@@ -1057,7 +1068,7 @@
                         return;
                     }
 
-                    this.playerEntity = this.serverController.func_184103_al().recreatePlayerEntity(this.playerEntity, 0, false);
+                    this.playerEntity = this.serverController.func_184103_al().recreatePlayerEntity(this.playerEntity, playerEntity.dimension, false);
 
                     if (this.serverController.isHardcore())
                     {
