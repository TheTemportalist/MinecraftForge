--- ../src-base/minecraft/net/minecraft/client/renderer/EntityRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/EntityRenderer.java
@@ -207,6 +207,7 @@
             {
                 this.loadShader(new ResourceLocation("shaders/post/invert.json"));
             }
+            else net.minecraftforge.client.ForgeHooksClient.loadEntityShader(entityIn, this);
         }
     }
 
@@ -491,7 +492,7 @@
                 f = f * 60.0F / 70.0F;
             }
 
-            return f;
+            return net.minecraftforge.client.ForgeHooksClient.getFOVModifier(this, entity, block, partialTicks, f);
         }
     }
 
@@ -629,17 +630,20 @@
 
         if (!this.mc.gameSettings.debugCamEnable)
         {
-            GlStateManager.rotate(entity.prevRotationPitch + (entity.rotationPitch - entity.prevRotationPitch) * partialTicks, 1.0F, 0.0F, 0.0F);
-
+            float yaw = entity.prevRotationYaw + (entity.rotationYaw - entity.prevRotationYaw) * partialTicks + 180.0F;
+            float pitch = entity.prevRotationPitch + (entity.rotationPitch - entity.prevRotationPitch) * partialTicks;
+            float roll = 0.0F;
             if (entity instanceof EntityAnimal)
             {
                 EntityAnimal entityanimal = (EntityAnimal)entity;
-                GlStateManager.rotate(entityanimal.prevRotationYawHead + (entityanimal.rotationYawHead - entityanimal.prevRotationYawHead) * partialTicks + 180.0F, 0.0F, 1.0F, 0.0F);
+                yaw = entityanimal.prevRotationYawHead + (entityanimal.rotationYawHead - entityanimal.prevRotationYawHead) * partialTicks + 180.0F;
             }
-            else
-            {
-                GlStateManager.rotate(entity.prevRotationYaw + (entity.rotationYaw - entity.prevRotationYaw) * partialTicks + 180.0F, 0.0F, 1.0F, 0.0F);
-            }
+            Block block = ActiveRenderInfo.getBlockAtEntityViewpoint(this.mc.theWorld, entity, partialTicks);
+            net.minecraftforge.client.event.EntityViewRenderEvent.CameraSetup event = new net.minecraftforge.client.event.EntityViewRenderEvent.CameraSetup(this, entity, block, partialTicks, yaw, pitch, roll);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+            GlStateManager.rotate(event.roll, 0.0F, 0.0F, 1.0F);
+            GlStateManager.rotate(event.pitch, 1.0F, 0.0F, 0.0F);
+            GlStateManager.rotate(event.yaw, 0.0F, 1.0F, 0.0F);
         }
 
         GlStateManager.translate(0.0F, -f, 0.0F);
@@ -1092,7 +1096,7 @@
 
                 try
                 {
-                    this.mc.currentScreen.drawScreen(k1, l1, p_181560_1_);
+                    net.minecraftforge.client.ForgeHooksClient.drawScreen(this.mc.currentScreen, k1, l1, p_181560_1_);
                 }
                 catch (Throwable throwable)
                 {
@@ -1187,7 +1191,7 @@
 
                     if (this.mc.playerController.getCurrentGameType() == WorldSettings.GameType.SPECTATOR)
                     {
-                        flag = block.hasTileEntity() && this.mc.theWorld.getTileEntity(blockpos) instanceof IInventory;
+                        flag = block.hasTileEntity(this.mc.theWorld.getBlockState(blockpos)) && this.mc.theWorld.getTileEntity(blockpos) instanceof IInventory;
                     }
                     else
                     {
@@ -1312,7 +1316,9 @@
             GlStateManager.pushMatrix();
             RenderHelper.enableStandardItemLighting();
             this.mc.mcProfiler.endStartSection("entities");
+            net.minecraftforge.client.ForgeHooksClient.setRenderPass(0);
             renderglobal.renderEntities(entity, icamera, partialTicks);
+            net.minecraftforge.client.ForgeHooksClient.setRenderPass(0);
             RenderHelper.disableStandardItemLighting();
             this.disableLightmap();
         }
@@ -1378,8 +1384,12 @@
             this.renderCloudsCheck(renderglobal, partialTicks, pass);
         }
 
+        this.mc.mcProfiler.endStartSection("forge_render_last");
+        net.minecraftforge.client.ForgeHooksClient.dispatchRenderLast(renderglobal, partialTicks);
+
         this.mc.mcProfiler.endStartSection("hand");
 
+        if (!net.minecraftforge.client.ForgeHooksClient.renderFirstPersonHand(renderglobal, partialTicks, pass))
         if (this.renderHand)
         {
             GlStateManager.clear(256);
@@ -1490,6 +1500,13 @@
 
     protected void renderRainSnow(float partialTicks)
     {
+        net.minecraftforge.client.IRenderHandler renderer = this.mc.theWorld.provider.getWeatherRenderer();
+        if (renderer != null)
+        {
+            renderer.render(partialTicks, this.mc.theWorld, mc);
+            return;
+        }
+
         float f = this.mc.theWorld.getRainStrength(partialTicks);
 
         if (f > 0.0F)
@@ -1820,6 +1837,13 @@
             this.fogColorBlue = f7;
         }
 
+        net.minecraftforge.client.event.EntityViewRenderEvent.FogColors event = new net.minecraftforge.client.event.EntityViewRenderEvent.FogColors(this, entity, block, partialTicks, this.fogColorRed, this.fogColorGreen, this.fogColorBlue);
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+
+        this.fogColorRed = event.red;
+        this.fogColorGreen = event.green;
+        this.fogColorBlue = event.blue;
+
         GlStateManager.clearColor(this.fogColorRed, this.fogColorGreen, this.fogColorBlue, 0.0F);
     }
 
@@ -1915,6 +1939,7 @@
                 GlStateManager.setFogStart(f * 0.05F);
                 GlStateManager.setFogEnd(Math.min(f, 192.0F) * 0.5F);
             }
+            net.minecraftforge.client.ForgeHooksClient.onFogRender(this, entity, block, partialTicks, p_78468_1_, f);
         }
 
         GlStateManager.enableColorMaterial();
