--- ../src-base/minecraft/net/minecraft/block/BlockFire.java
+++ ../src-work/minecraft/net/minecraft/block/BlockFire.java
@@ -90,6 +90,7 @@
 
     public void setFireInfo(Block blockIn, int encouragement, int flammability)
     {
+        if (blockIn == Blocks.air) throw new IllegalArgumentException("Tried to set air on fire... This is bad.");
         this.encouragements.put(blockIn, Integer.valueOf(encouragement));
         this.flammabilities.put(blockIn, Integer.valueOf(flammability));
     }
@@ -164,7 +165,7 @@
                         return;
                     }
 
-                    if (!this.canCatchFire(worldIn, pos.down()) && i == 15 && rand.nextInt(4) == 0)
+                    if (!this.canCatchFire(worldIn, pos.down(), EnumFacing.UP) && i == 15 && rand.nextInt(4) == 0)
                     {
                         worldIn.setBlockToAir(pos);
                         return;
@@ -179,12 +180,12 @@
                     j = -50;
                 }
 
-                this.catchOnFire(worldIn, pos.east(), 300 + j, rand, i);
-                this.catchOnFire(worldIn, pos.west(), 300 + j, rand, i);
-                this.catchOnFire(worldIn, pos.down(), 250 + j, rand, i);
-                this.catchOnFire(worldIn, pos.up(), 250 + j, rand, i);
-                this.catchOnFire(worldIn, pos.north(), 300 + j, rand, i);
-                this.catchOnFire(worldIn, pos.south(), 300 + j, rand, i);
+                this.tryCatchFire(worldIn, pos.east(), 300 + j, rand, i, EnumFacing.WEST);
+                this.tryCatchFire(worldIn, pos.west(), 300 + j, rand, i, EnumFacing.EAST);
+                this.tryCatchFire(worldIn, pos.down(), 250 + j, rand, i, EnumFacing.UP);
+                this.tryCatchFire(worldIn, pos.up(), 250 + j, rand, i, EnumFacing.DOWN);
+                this.tryCatchFire(worldIn, pos.north(), 300 + j, rand, i, EnumFacing.SOUTH);
+                this.tryCatchFire(worldIn, pos.south(), 300 + j, rand, i, EnumFacing.NORTH);
 
                 for (int k = -1; k <= 1; ++k)
                 {
@@ -243,22 +244,30 @@
         return false;
     }
 
+    @Deprecated // Use Block.getFlammability
     public int getFlammability(Block blockIn)
     {
         Integer integer = (Integer)this.flammabilities.get(blockIn);
         return integer == null ? 0 : integer.intValue();
     }
 
+    @Deprecated // Use Block.getFlammability
     public int getEncouragement(Block blockIn)
     {
         Integer integer = (Integer)this.encouragements.get(blockIn);
         return integer == null ? 0 : integer.intValue();
     }
 
+    @Deprecated // Use tryCatchFire with face below
     private void catchOnFire(World worldIn, BlockPos pos, int chance, Random random, int age)
     {
-        int i = this.getFlammability(worldIn.getBlockState(pos).getBlock());
+        this.tryCatchFire(worldIn, pos, chance, random, age, EnumFacing.UP);
+    }
 
+    private void tryCatchFire(World worldIn, BlockPos pos, int chance, Random random, int age, EnumFacing face)
+    {
+        int i = worldIn.getBlockState(pos).getBlock().getFlammability(worldIn, pos, face);
+
         if (random.nextInt(chance) < i)
         {
             IBlockState iblockstate = worldIn.getBlockState(pos);
@@ -290,7 +299,7 @@
     {
         for (EnumFacing enumfacing : EnumFacing.values())
         {
-            if (this.canCatchFire(worldIn, pos.offset(enumfacing)))
+            if (this.canCatchFire(worldIn, pos.offset(enumfacing), enumfacing.getOpposite()))
             {
                 return true;
             }
@@ -311,7 +320,7 @@
 
             for (EnumFacing enumfacing : EnumFacing.values())
             {
-                i = Math.max(this.getEncouragement(worldIn.getBlockState(pos.offset(enumfacing)).getBlock()), i);
+                i = Math.max(worldIn.getBlockState(pos.offset(enumfacing)).getBlock().getFlammability(worldIn, pos.offset(enumfacing), enumfacing.getOpposite()), i);
             }
 
             return i;
@@ -323,9 +332,10 @@
         return false;
     }
 
+    @Deprecated // Use canCatchFire with face sensitive version below
     public boolean canCatchFire(IBlockAccess worldIn, BlockPos pos)
     {
-        return this.getEncouragement(worldIn.getBlockState(pos).getBlock()) > 0;
+        return canCatchFire(worldIn, pos, EnumFacing.UP);
     }
 
     public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
@@ -458,4 +468,19 @@
     {
         return new BlockStateContainer(this, new IProperty[] {AGE, NORTH, EAST, SOUTH, WEST, UPPER});
     }
+
+    /*================================= Forge Start ======================================*/
+    /**
+     * Side sensitive version that calls the block function.
+     *
+     * @param world The current world
+     * @param pos Block position
+     * @param face The side the fire is coming from
+     * @return True if the face can catch fire.
+     */
+    public boolean canCatchFire(IBlockAccess world, BlockPos pos, EnumFacing face)
+    {
+        return world.getBlockState(pos).getBlock().isFlammable(world, pos, face);
+    }
+    /*================================= Forge Start ======================================*/
 }
