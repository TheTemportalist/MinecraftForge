--- ../src-base/minecraft/net/minecraft/world/ChunkCache.java
+++ ../src-work/minecraft/net/minecraft/world/ChunkCache.java
@@ -61,6 +61,8 @@
     {
         int i = (pos.getX() >> 4) - this.chunkX;
         int j = (pos.getZ() >> 4) - this.chunkZ;
+        if (i < 0 || i >= chunkArray.length || j < 0 || j >= chunkArray[i].length) return null;
+        if (chunkArray[i][j] == null) return null;
         return this.chunkArray[i][j].getTileEntity(pos, Chunk.EnumCreateEntityType.IMMEDIATE);
     }
 
@@ -139,6 +141,8 @@
             {
                 int i = (pos.getX() >> 4) - this.chunkX;
                 int j = (pos.getZ() >> 4) - this.chunkZ;
+                if (i < 0 || i >= chunkArray.length || j < 0 || j >= chunkArray[i].length) return p_175629_1_.defaultLightValue;
+                if (chunkArray[i][j] == null) return p_175629_1_.defaultLightValue;
                 return this.chunkArray[i][j].getLightFor(p_175629_1_, pos);
             }
         }
@@ -150,7 +154,8 @@
 
     public boolean isAirBlock(BlockPos pos)
     {
-        return this.getBlockState(pos).func_185904_a() == Material.air;
+        IBlockState state = this.getBlockState(pos);
+        return state.getBlock().isAir(state, this, pos);
     }
 
     @SideOnly(Side.CLIENT)
@@ -160,6 +165,7 @@
         {
             int i = (pos.getX() >> 4) - this.chunkX;
             int j = (pos.getZ() >> 4) - this.chunkZ;
+            if (i < 0 || i >= chunkArray.length || j < 0 || j >= chunkArray[i].length) return p_175628_1_.defaultLightValue;
             return this.chunkArray[i][j].getLightFor(p_175628_1_, pos);
         }
         else
@@ -178,4 +184,17 @@
     {
         return this.worldObj.getWorldType();
     }
+
+    @Override
+    public boolean isSideSolid(BlockPos pos, EnumFacing side, boolean _default)
+    {
+        int x = (pos.getX() >> 4) - this.chunkX;
+        int z = (pos.getZ() >> 4) - this.chunkZ;
+        if (pos.getY() >= 0 && pos.getY() < 256) return _default;
+        if (x < 0 || x >= chunkArray.length || z < 0 || z >= chunkArray[x].length) return _default;
+        if (chunkArray[x][z] == null) return _default;
+
+        IBlockState state = getBlockState(pos);
+        return state.getBlock().isSideSolid(state, this, pos, side);
+    }
 }
