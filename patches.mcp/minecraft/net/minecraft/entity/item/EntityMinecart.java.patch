--- ../src-base/minecraft/net/minecraft/entity/item/EntityMinecart.java
+++ ../src-work/minecraft/net/minecraft/entity/item/EntityMinecart.java
@@ -54,6 +54,20 @@
     @SideOnly(Side.CLIENT)
     private double velocityZ;
 
+    /* Forge: Minecart Compatibility Layer Integration. */
+    public static float defaultMaxSpeedAirLateral = 0.4f;
+    public static float defaultMaxSpeedAirVertical = -1f;
+    public static double defaultDragAir = 0.94999998807907104D;
+    protected boolean canUseRail = true;
+    protected boolean canBePushed = true;
+    private static net.minecraftforge.common.IMinecartCollisionHandler collisionHandler = null;
+
+    /* Instance versions of the above physics properties */
+    private float currentSpeedRail = getMaxCartSpeedOnRail();
+    protected float maxSpeedAirLateral = defaultMaxSpeedAirLateral;
+    protected float maxSpeedAirVertical = defaultMaxSpeedAirVertical;
+    protected double dragAir = defaultDragAir;
+
     public EntityMinecart(World worldIn)
     {
         super(worldIn);
@@ -99,17 +113,19 @@
 
     public AxisAlignedBB getCollisionBox(Entity entityIn)
     {
+        if (getCollisionHandler() != null) return getCollisionHandler().getCollisionBox(this, entityIn);
         return entityIn.canBePushed() ? entityIn.getEntityBoundingBox() : null;
     }
 
     public AxisAlignedBB getCollisionBoundingBox()
     {
+        if (getCollisionHandler() != null) return getCollisionHandler().getBoundingBox(this);
         return null;
     }
 
     public boolean canBePushed()
     {
-        return true;
+        return canBePushed;
     }
 
     public EntityMinecart(World worldIn, double x, double y, double z)
@@ -315,7 +331,7 @@
             BlockPos blockpos = new BlockPos(k, l, i1);
             IBlockState iblockstate = this.worldObj.getBlockState(blockpos);
 
-            if (BlockRailBase.isRailBlock(iblockstate))
+            if (canUseRail() && BlockRailBase.isRailBlock(iblockstate))
             {
                 this.func_180460_a(blockpos, iblockstate);
 
@@ -354,7 +370,10 @@
 
             this.setRotation(this.rotationYaw, this.rotationPitch);
 
-            for (Entity entity : this.worldObj.getEntitiesWithinAABBExcludingEntity(this, this.getEntityBoundingBox().expand(0.20000000298023224D, 0.0D, 0.20000000298023224D)))
+            AxisAlignedBB box;
+            if (getCollisionHandler() != null) box = getCollisionHandler().getMinecartCollisionBox(this);
+            else                               box = this.getEntityBoundingBox().expand(0.20000000298023224D, 0.0D, 0.20000000298023224D);
+            for (Entity entity : this.worldObj.getEntitiesWithinAABBExcludingEntity(this, box))
             {
                 if (!this.func_184196_w(entity) && entity.canBePushed() && entity instanceof EntityMinecart)
                 {
@@ -363,6 +382,7 @@
             }
 
             this.handleWaterMovement();
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.minecart.MinecartUpdateEvent(this, this.getCurrentRailPosition()));
         }
     }
 
@@ -377,10 +397,21 @@
 
     protected void moveDerailedMinecart()
     {
-        double d0 = this.getMaximumSpeed();
+        double d0 = onGround ? this.getMaximumSpeed() : getMaxSpeedAirLateral();
         this.motionX = MathHelper.clamp_double(this.motionX, -d0, d0);
         this.motionZ = MathHelper.clamp_double(this.motionZ, -d0, d0);
 
+        double moveY = motionY;
+        if(getMaxSpeedAirVertical() > 0 && motionY > getMaxSpeedAirVertical())
+        {
+            moveY = getMaxSpeedAirVertical();
+            if(Math.abs(motionX) < 0.3f && Math.abs(motionZ) < 0.3f)
+            {
+                moveY = 0.15f;
+                motionY = moveY;
+            }
+        }
+
         if (this.onGround)
         {
             this.motionX *= 0.5D;
@@ -388,13 +419,13 @@
             this.motionZ *= 0.5D;
         }
 
-        this.moveEntity(this.motionX, this.motionY, this.motionZ);
+        this.moveEntity(this.motionX, moveY, this.motionZ);
 
         if (!this.onGround)
         {
-            this.motionX *= 0.949999988079071D;
-            this.motionY *= 0.949999988079071D;
-            this.motionZ *= 0.949999988079071D;
+            this.motionX *= getDragAir();
+            this.motionY *= getDragAir();
+            this.motionZ *= getDragAir();
         }
     }
 
@@ -414,25 +445,25 @@
             flag1 = !flag;
         }
 
-        double d0 = 0.0078125D;
+        double slopeAdjustment = getSlopeAdjustment();
         BlockRailBase.EnumRailDirection blockrailbase$enumraildirection = (BlockRailBase.EnumRailDirection)p_180460_2_.getValue(blockrailbase.getShapeProperty());
 
         switch (blockrailbase$enumraildirection)
         {
             case ASCENDING_EAST:
-                this.motionX -= 0.0078125D;
+                this.motionX -= slopeAdjustment;
                 ++this.posY;
                 break;
             case ASCENDING_WEST:
-                this.motionX += 0.0078125D;
+                this.motionX += slopeAdjustment;
                 ++this.posY;
                 break;
             case ASCENDING_NORTH:
-                this.motionZ += 0.0078125D;
+                this.motionZ += slopeAdjustment;
                 ++this.posY;
                 break;
             case ASCENDING_SOUTH:
-                this.motionZ -= 0.0078125D;
+                this.motionZ -= slopeAdjustment;
                 ++this.posY;
         }
 
@@ -478,7 +509,7 @@
             }
         }
 
-        if (flag1)
+        if (flag1 && shouldDoRailFunctions())
         {
             double d17 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
 
@@ -574,8 +605,14 @@
             this.motionZ = d5 * (double)(i - p_180460_1_.getZ());
         }
 
-        if (flag)
+
+        if(shouldDoRailFunctions())
         {
+            ((BlockRailBase)p_180460_2_.getBlock()).onMinecartPass(worldObj, this, p_180460_1_);
+        }
+
+        if (flag && shouldDoRailFunctions())
+        {
             double d15 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
 
             if (d15 > 0.01D)
